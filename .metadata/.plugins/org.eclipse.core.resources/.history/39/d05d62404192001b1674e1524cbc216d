package intro;

import java.util.ArrayList;
import java.util.LinkedList;
import java.util.Queue;

public class Path_In_A_Rectangle_With_Circles {
	private static int v;
	private static ArrayList<Integer> a[];

	public Path_In_A_Rectangle_With_Circles(int i) {
		v = i;
		a = new ArrayList[i];
		for (int j = 0; j < i; ++j) {
			a[j] = new ArrayList<Integer>();
		}
	}
	void addEdge(int v, int w) {
		a[v].add(w);
		}

	public static void main(String[] args) {
		
		int m=5,n=5,k=2,r=1;
		int a[]= {1,3};
		int b[]= {3,3};
		
		Path_In_A_Rectangle_With_Circles g = new Path_In_A_Rectangle_With_Circles(m*n);
		
		for(int i=1;i<=m;i++)
		{
			for(int j=1;j<=n;j++)
			{
				g.addEdge(i, j);
			}
		}
		for(int i=0;i<m;i++)
		{
			for(int j=0;j<n;j++)
			{
			System.out.println(i+" "+g.a[i].get(j));	
			}
		}
			g.BFS(0);

	}



	private void BFS(int i) {
		// TODO Auto-generated method stub
		boolean x[] = new boolean[v];
		Queue<Integer> b = new LinkedList<Integer>();
		int level[]= new int[v];
		x[i] = true;
		b.add(i);
level[i]=0;
		while (!b.isEmpty()) {
			i = b.poll();
			

			for (int j = 0; j < a[i].size(); j++) {
				int n = a[i].get(j);
				if (!x[n]) {
			level[n]=level[i]+1;
					x[n] = true;
					b.add(n);
				}
			}
		}
	
	for(int k=0;k<level.length;k++)
	{
		System.out.println(level[k]);
	}
	
	}
}
