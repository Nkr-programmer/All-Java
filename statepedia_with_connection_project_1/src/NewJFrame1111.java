import java.sql.*;
 import javax.swing.JComboBox;
 import javax.swing.JOptionPane ;
 import javax.swing.table.DefaultTableModel;
 import javax.swing.JOptionPane;


/**
 *
 * @author Guest
 */
public class NewJFrame1111 extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame2
     */
    public NewJFrame1111() {
        initComponents();
          selectpcompany.setEnabled(false);
            selectpname.setEnabled(false);
            selectpquantity.setEnabled(false);
            selectpno.setEnabled(false);
                        order.setEnabled(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {

        jInternalFrame3 = new javax.swing.JInternalFrame();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable6 = new javax.swing.JTable();
        selectpno = new javax.swing.JTextField();
        selectpname = new javax.swing.JTextField();
        selectpquantity = new javax.swing.JTextField();
        selectpcompany = new javax.swing.JTextField();
        p1 = new javax.swing.JPasswordField();
        jButton4 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        order = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jInternalFrame3.setTitle("                           DATA FETCH");
        jInternalFrame3.setPreferredSize(new java.awt.Dimension(888, 534));
        jInternalFrame3.setVisible(true);

        jTable6.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "pno", "pame", "pquantity", "pcompany"
            }
        ));
        jScrollPane6.setViewportView(jTable6);

        p1.setEchoChar('*');
        p1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p1ActionPerformed(evt);
            }
        });

        jButton4.setText("SELECT");
        jButton4.setFocusable(false);
        jButton4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel6.setText("CHOOSE TYPE");

        jLabel14.setText("SELECT product NO");

        jLabel15.setText("SELECT product NAME");

        jLabel16.setText("SELECT product  CLASS");

        jLabel17.setText("SELECT product  SUBJECT");

        jLabel18.setText("ORDER BY -:");

        javax.swing.GroupLayout jInternalFrame3Layout = new javax.swing.GroupLayout(jInternalFrame3.getContentPane());
        jInternalFrame3.getContentPane().setLayout(jInternalFrame3Layout);
        jInternalFrame3Layout.setHorizontalGroup(
            jInternalFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jInternalFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jInternalFrame3Layout.createSequentialGroup()
                        .addGroup(jInternalFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17)
                            .addGroup(jInternalFrame3Layout.createSequentialGroup()
                                .addGroup(jInternalFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel16)
                                    .addComponent(jLabel15))
                                .addGap(137, 137, 137)
                                .addGroup(jInternalFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(selectpquantity, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(selectpname, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(selectpcompany, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jInternalFrame3Layout.createSequentialGroup()
                                .addGroup(jInternalFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel14)
                                    .addComponent(jLabel18))
                                .addGap(156, 156, 156)
                                .addGroup(jInternalFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(selectpno, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE)
                                    .addComponent(order)))
                            .addGroup(jInternalFrame3Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(181, 181, 181)
                                .addComponent(p1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 80, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jInternalFrame3Layout.createSequentialGroup()
                .addGap(176, 176, 176)
                .addComponent(jButton4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jInternalFrame3Layout.setVerticalGroup(
            jInternalFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame3Layout.createSequentialGroup()
                .addGroup(jInternalFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jInternalFrame3Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel6))
                    .addGroup(jInternalFrame3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(p1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(26, 26, 26)
                .addGroup(jInternalFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(order, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jInternalFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(selectpno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(jInternalFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectpname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addGap(38, 38, 38)
                .addGroup(jInternalFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectpquantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addGap(32, 32, 32)
                .addGroup(jInternalFrame3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectpcompany, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addGap(32, 32, 32)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(jButton4)
                .addGap(26, 26, 26))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 97, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 118, Short.MAX_VALUE)
        );

        jLabel5.setFont(new java.awt.Font("Vijaya", 3, 24)); // NOI18N
        jLabel5.setText("TO CHANGE FUNCTION");

        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(64, Short.MAX_VALUE)
                .addComponent(jInternalFrame3, javax.swing.GroupLayout.PREFERRED_SIZE, 465, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(73, 73, 73)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jInternalFrame3, javax.swing.GroupLayout.PREFERRED_SIZE, 619, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void p1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p1ActionPerformed
        // TODO add your handling code here:
        String pwd = new String (p1.getPassword());
        if (pwd.equals("pno"))
        {
            selectpno.setEnabled(true);
            selectpname.setEnabled(false);
            selectpquantity.setEnabled(false);
            selectpcompany.setEnabled(false);
        }else
        if (pwd.equals("pname"))
        {
            selectpname.setEnabled(true);
            selectpno.setEnabled(false);
            selectpquantity.setEnabled(false);
            selectpcompany.setEnabled(false);
        }else
        if (pwd.equals("pquantity"))
        {
            selectpno.setEnabled(false);
            selectpname.setEnabled(false);
            selectpquantity.setEnabled(true);
            selectpcompany.setEnabled(false);
        } else
        if (pwd.equals("pcompany"))
        {
            selectpcompany.setEnabled(true);
            selectpname.setEnabled(false);
            selectpquantity.setEnabled(false);
            selectpno.setEnabled(false);
        }
        else
        if (pwd.equals("order"))
        {
            order.setEnabled(true);
              selectpcompany.setEnabled(false);
            selectpname.setEnabled(false);
            selectpquantity.setEnabled(false);
            selectpno.setEnabled(false);

        }
        else
        if (pwd.equals("clear"))
        {

            DefaultTableModel model = (DefaultTableModel)this.jTable6.getModel();
            model.setRowCount(0);
            model.setRowCount(40);

        }

        else
        {
            JOptionPane.showMessageDialog(null, "PLEASE TYPE WRITE PASSWORD");
        }
    }//GEN-LAST:event_p1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:

        String t=order.getText();

        DefaultTableModel my_model=(DefaultTableModel) jTable6.getModel();
        // String data1 =sno.getText();
        //   String data2 =name.getText();
        //    String data3 =clas.getText();
        //         String data4 =sub.getText()

        if(selectpno.isEnabled())
        {

            try{
                Class.forName("java.sql.Driver");
                Connection con=DriverManager.getConnection("jdbc:mysql://localhost/test","root","345");
                Statement stmt=con.createStatement();
                String query ="SELECT * FROM market WHERE  pno="+selectpno.getText()+" ;";
                ResultSet rs = stmt.executeQuery(query);
                while(rs.next()){
                    String sno= rs.getString ("pno");
                    String name= rs.getString("pname");
                    String clas= rs.getString("pquantity");
                    String sub= rs.getString("pcompany");
                    my_model.addRow    ( new Object[]{sno,name,clas,sub});

                }

                rs.close();
                stmt.close();
                con.close();
            }
            catch(Exception e) {
                JOptionPane.showMessageDialog(null,"Error in Connectivity");
            }
        }
        if(selectpname.isEnabled())
        {

            try{
                Class.forName("java.sql.Driver");
                Connection con=DriverManager.getConnection("jdbc:mysql://localhost/test","root","345");
                Statement stmt=con.createStatement();
                String query ="SELECT * FROM market WHERE  pname='"+selectpname.getText()+"' ;";
                ResultSet rs = stmt.executeQuery(query);
                while(rs.next()){
                    String sno= rs.getString ("pno");
                    String name= rs.getString("pname");
                    String clas= rs.getString("pquantity");
                    String sub= rs.getString("pcompany");
                    my_model.addRow    ( new Object[]{sno,name,clas,sub});

                }

                rs.close();
                stmt.close();
                con.close();
            }
            catch(Exception e) {
                JOptionPane.showMessageDialog(null,"Error in Connectivity");
            }
        }
        if(selectpquantity.isEnabled())
        {

            try{
                Class.forName("java.sql.Driver");
                Connection con=DriverManager.getConnection("jdbc:mysql://localhost/test","root","345");
                Statement stmt=con.createStatement();
                String query ="SELECT * FROM market WHERE pquantity ="+selectpquantity.getText()+"  ;";
                ResultSet rs = stmt.executeQuery(query);
                while(rs.next()){
                    String sno= rs.getString ("pno");
                    String name= rs.getString("pname");
                    String clas= rs.getString("pquantity");
                    String sub= rs.getString("pcompany");
                    my_model.addRow    ( new Object[]{sno,name,clas,sub});

                }

                rs.close();
                stmt.close();
                con.close();
            }
            catch(Exception e) {
                JOptionPane.showMessageDialog(null,"Error in Connectivity");
            }
        }
        if(selectpcompany.isEnabled())
        {

            try{
                Class.forName("java.sql.Driver");
                Connection con=DriverManager.getConnection("jdbc:mysql://localhost/test","root","345");
                Statement stmt=con.createStatement();
                String query ="SELECT * FROM market WHERE  pcompany='"+selectpcompany.getText()+"' ;";
                ResultSet rs = stmt.executeQuery(query);
                while(rs.next()){
                    String sno= rs.getString ("pno");
                    String name= rs.getString("pname");
                    String clas= rs.getString("pquantity");
                    String sub= rs.getString("pcompany");
                    my_model.addRow    ( new Object[]{sno,name,clas,sub});

                }

                rs.close();
                stmt.close();
                con.close();
            }
            catch(Exception e) {
                JOptionPane.showMessageDialog(null,"Error in Connectivity");
            }
        }

        if (t.equals("pno"))
        {

            try{
                Class.forName("java.sql.Driver");
                Connection con=DriverManager.getConnection("jdbc:mysql://localhost/test","root","345");
                Statement stmt=con.createStatement();
                String query ="SELECT * FROM market  ORDER BY pno  ;";
                ResultSet rs = stmt.executeQuery(query);
                while(rs.next()){
                    String sno= rs.getString ("pno");
                    String name= rs.getString("pname");
                    String clas= rs.getString("pquantity");
                    String sub= rs.getString("pcompany");
                    my_model.addRow    ( new Object[]{sno,name,clas,sub});

                }

                rs.close();
                stmt.close();
                con.close();
            }
            catch(Exception e) {
                JOptionPane.showMessageDialog(null,"Error in Connectivity");
            }
        }
        if (t.equals("pname"))
        {

            try{
                Class.forName("java.sql.Driver");
                Connection con=DriverManager.getConnection("jdbc:mysql://localhost/test","root","345");
                Statement stmt=con.createStatement();
                String query ="SELECT * FROM market  ORDER BY pname  ;";
                ResultSet rs = stmt.executeQuery(query);
                while(rs.next()){
                    String sno= rs.getString ("pno");
                    String name= rs.getString("pname");
                    String clas= rs.getString("pquantity");
                    String sub= rs.getString("pcompany");
                    my_model.addRow    ( new Object[]{sno,name,clas,sub});

                }

                rs.close();
                stmt.close();
                con.close();
            }
            catch(Exception e) {
                JOptionPane.showMessageDialog(null,"Error in Connectivity");
            }
        }
        if (t.equals("pquantity"))
        {

            try{
                Class.forName("java.sql.Driver");
                Connection con=DriverManager.getConnection("jdbc:mysql://localhost/test","root","123");
                Statement stmt=con.createStatement();
                String query ="SELECT * FROM market  ORDER BY pquantity ;";
                ResultSet rs = stmt.executeQuery(query);
                while(rs.next()){
                    String sno= rs.getString ("pno");
                    String name= rs.getString("pname");
                    String clas= rs.getString("pquantity");
                    String sub= rs.getString("pcompany");
                    my_model.addRow    ( new Object[]{sno,name,clas,sub});

                }

                rs.close();
                stmt.close();
                con.close();
            }
            catch(Exception e) {
                JOptionPane.showMessageDialog(null,"Error in Connectivity");
            }
        }
        if (t.equals("pcompany"))
        {

            try{
                Class.forName("java.sql.Driver");
                Connection con=DriverManager.getConnection("jdbc:mysql://localhost/test","root","123");
                Statement stmt=con.createStatement();
                String query ="SELECT * FROM market   ORDER BY pcompany  ;";
                ResultSet rs = stmt.executeQuery(query);
                while(rs.next()){
                    String sno= rs.getString ("pno");
                    String name= rs.getString("pname");
                    String clas= rs.getString("pquantity");
                    String sub= rs.getString("pcompany");
                    my_model.addRow    ( new Object[]{sno,name,clas,sub});

                }

                rs.close();
                stmt.close();
                con.close();
            }
            catch(Exception e) {
                JOptionPane.showMessageDialog(null,"Error in Connectivity");
            }
        }
    }
    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased
        // TODO add your handling code here:
               String i=jTextField1.getText() ;
        if(i.equals ("insert "))
        {
        new NewJFrame11().setVisible(true);
        }
        else
            if(i.equals ("delete "))
            {
                        new NewJFrame111().setVisible(true);

            }else
                 if(i.equals ("update "))
        {
        new NewJFrame11111().setVisible(true);
        }
        else
                 if(i.equals ("fetch "))
        {
        new NewJFrame1111().setVisible(true);
        }
        else
                 if(i.equals ("start_page "))
        {
        new NewJFrameMAIN().setVisible(true);
        }
                
       
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }

    private javax.swing.JButton jButton4;
    private javax.swing.JInternalFrame jInternalFrame3;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTable jTable6;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField order;
    private javax.swing.JPasswordField p1;
    private javax.swing.JTextField selectpcompany;
    private javax.swing.JTextField selectpname;
    private javax.swing.JTextField selectpno;
    private javax.swing.JTextField selectpquantity;
    // End of variables declaration//GEN-END:variables
}
